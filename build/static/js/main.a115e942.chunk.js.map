{"version":3,"sources":["constants/colors.js","server-data-simulator.js","stores/actions/types.js","components/TimerForm.js","stores/actions/index.js","components/ToggleableTimerForm.js","utilities/time.js","components/TimerActionButtons.js","components/Timer.js","components/EditableTimer.js","components/EditableTimerList.js","components/App.js","stores/reducers/timers-reducer.js","stores/reducers/index.js","stores/reducers/theme-reducer.js","stores/store.js","index.js"],"names":["COLORS","DEFAULT_TIMER_TITLE","DEFAULT_TIMER_PROJECT","DEFAULT_TIMER_COLOR","LOCAL_STORAGE_KEY___TIMERS","loadTimers","JSON","parse","localStorage","getItem","saveTimers","timers","setItem","stringify","a","Promise","resolve","setTimeout","timer","title","project","color","id","uuidv4","elapsed","runningSince","newTimer","timerIndex","findIndex","t","timerID","filter","now","Date","updatedTimer","map","lastElapsed","Server_Data_Simulator","fetchTimers","createTimer","updateTimer","deleteTimer","startTimer","stopTimer","resetTimer","CHANGE_THEME","GET_THEME","FETCH_TIMERS","CREATE_TIMER","DELETE_TIMER","UPDATE_TIMER","START_TIMER","STOP_TIMER","RESET_TIMER","TimerForm","state","props","handleTitleChange","e","setState","target","value","handleProjectChange","handleColorChange","handleSubmit","onSubmit","this","submitText","className","type","onChange","name","toLowerCase","style","background","checked","onClick","onCancel","Component","connect","dispatch","createdTimer","ToggleableTimerForm","isFormOpen","handleCreateClick","handleCancelClick","handleAddClick","timeUtils","renderElapsedString","totalElapsed","MS","HH","Math","floor","MM","SS","format00","millisecondsToHuman","TimerActionButtons","renderActionButton","label","cssClasses","onClickHandler","timerIsRunning","onStopClick","onStartClick","Timer","window","confirm","forceUpdateInterval","setInterval","forceUpdate","clearInterval","elapsedString","cssStyle","onEditClick","EditableTimer","handleUpdateClick","handleEditClick","EditableTimerList","FILTERS","all","running","stopped","App","timersFilter","changeFilter","renderFilter","count","getTheme","allCount","length","runningCount","stoppedCount","theme","inverseTheme","document","body","classList","add","changeTheme","timerUpdateReducer","state_timers","combineReducers","state_theme","action","composedEnhancers","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","rootReducer","undefined","compose","ReactDOM","render","getElementById"],"mappings":"6NASeA,EATA,CACb,UACA,MACA,QACA,SACA,OACA,W,8CCJIC,EAAwB,QACxBC,EAAwB,UACxBC,EAAwB,UAExBC,EAA6B,SAGnC,SAASC,IACP,OAAQC,KAAKC,MAAMC,aAAaC,QAAQL,KAA+B,GAEzE,SAASM,EAAWC,GAClBH,aAAaI,QAAQR,EAA4BE,KAAKO,UAAUF,I,4CAKlE,4BAAAG,EAAA,6DACQH,EAASN,IADjB,SAGQ,IAAIU,SAAQ,SAAAC,GAAO,OAAIC,WAAYD,EAAS,MAHpD,gCAISL,GAJT,4C,kEASA,WAA2BO,GAA3B,SAAAJ,EAAA,6DACEI,EAAQ,CACNC,MAAOD,EAAMC,OAASlB,EACtBmB,QAASF,EAAME,SAAWlB,EAC1BmB,MAAOH,EAAMG,OAASlB,EACtBmB,GAAIC,cACJC,QAAS,EACTC,aAAc,MAGhBf,EAVF,CASkBQ,GATlB,mBAS4Bb,OAT5B,SAYQ,IAAIU,SAAQ,SAAAC,GAAO,OAAIC,WAAYD,EAAS,MAZpD,gCAaSE,GAbT,4C,kEAkBA,WAA2BQ,GAA3B,iBAAAZ,EAAA,6DACEY,EAAQ,2BACHA,GADG,IAENP,MAAOO,EAASP,OAASlB,EACzBmB,QAASM,EAASN,SAAWlB,IAEzBS,EAASN,IACTsB,EAAahB,EAAOiB,WAAU,SAAAC,GAAC,OAAIA,EAAEP,KAAOI,EAASJ,MAC3DX,EAAOgB,GAAcD,EAErBhB,EAAWC,GAVb,SAYQ,IAAII,SAAQ,SAAAC,GAAO,OAAIC,WAAYD,EAAS,MAZpD,gCAaSU,GAbT,4C,kEAkBA,WAA2BI,GAA3B,SAAAhB,EAAA,6DAGEJ,EAFeL,IAAa0B,QAAO,SAAAb,GAAK,OAAEA,EAAMI,KAAKQ,MADvD,SAKQ,IAAIf,SAAQ,SAAAC,GAAO,OAAIC,WAAYD,EAAS,MALpD,gCAMSc,GANT,4C,kEAWA,WAA0BA,GAA1B,iBAAAhB,EAAA,6DACQkB,EAAMC,KAAKD,MACbE,EAAe,GAUnBxB,EATeL,IAAa8B,KAAI,SAAAjB,GAC9B,OAAIA,EAAMI,KAAOQ,EACfI,EAAY,2BAAOhB,GAAP,IAAcO,aAAcO,IAIjCd,MATb,SAcQ,IAAIH,SAAQ,SAAAC,GAAO,OAAIC,WAAYD,EAAS,MAdpD,gCAeSkB,GAfT,4C,kEAoBA,WAAyBJ,GAAzB,iBAAAhB,EAAA,6DACQkB,EAAMC,KAAKD,MACbE,EAAe,GAUnBxB,EATeL,IAAa8B,KAAI,SAAAjB,GAC9B,GAAIA,EAAMI,KAAOQ,EAAS,CACtB,IAAIM,EAAcJ,EAAMd,EAAMO,aAE9B,OADAS,EAAY,2BAAOhB,GAAP,IAAcM,QAASN,EAAMM,QAAUY,EAAaX,aAAc,OAGhF,OAAOP,MATb,SAcQ,IAAIH,SAAQ,SAAAC,GAAO,OAAIC,WAAYD,EAAS,MAdpD,gCAeSkB,GAfT,4C,kEAoBA,WAA0BJ,GAA1B,eAAAhB,EAAA,6DACMoB,EAAe,GASnBxB,EAReL,IAAa8B,KAAI,SAAAjB,GAC9B,OAAIA,EAAMI,KAAOQ,EACbI,EAAY,2BAAOhB,GAAP,IAAcM,QAAS,EAAGC,aAAc,OAG/CP,MAPb,SAYQ,IAAIH,SAAQ,SAAAC,GAAO,OAAIC,WAAYD,EAAS,MAZpD,gCAaSkB,GAbT,4C,sBAoBA,IASeG,EATe,CAC5BC,Y,2CACAC,Y,4CACAC,Y,4CACAC,Y,4CACAC,W,4CACAC,U,4CACAC,W,6CC7IWC,EAAe,sBACfC,EAAe,mBAEfC,EAAe,sBACfC,EAAe,sBACfC,EAAe,sBACfC,EAAe,sBACfC,EAAe,qBACfC,EAAe,oBACfC,EAAe,qB,OCEtBC,E,4MACJC,MAAQ,CACNpC,MAAO,EAAKqC,MAAMtC,MAAMC,OAAS,GACjCC,QAAS,EAAKoC,MAAMtC,MAAME,SAAW,GACrCC,MAAQ,EAAKmC,MAAMtC,MAAMG,OAASrB,EAAO,I,EAG3CyD,kBAAsB,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAExC,MAASuC,EAAEE,OAAOC,S,EAC7DC,oBAAsB,SAAAJ,GAAC,OAAI,EAAKC,SAAS,CAAEvC,QAASsC,EAAEE,OAAOC,S,EAC7DE,kBAAsB,SAAAL,GAAC,OAAI,EAAKC,SAAS,CAAEtC,MAASqC,EAAEE,OAAOC,S,EAE7DG,aAAe,WACb,IAAM9C,EAAK,2BACN,EAAKsC,MAAMtC,OADL,IAETC,MAAU,EAAKoC,MAAMpC,MACrBC,QAAU,EAAKmC,MAAMnC,QACrBC,MAAU,EAAKkC,MAAMlC,QAGjBH,EAAMI,GACV,EAAKkC,MAAMhB,YAAYtB,GAEvB,EAAKsC,MAAMjB,YAAYrB,GAEzB,EAAKsC,MAAMS,Y,4CAGb,WAAU,IAAD,OACD/C,EAAQgD,KAAKV,MAAMtC,MACnBiD,EAAajD,EAAMI,GAAK,SAAW,SAEzC,OACE,sBAAK8C,UAAU,kBAAf,UACE,sBAAKA,UAAU,QAAf,UACE,0CACA,uBACEC,KAAK,OACLR,MAAOK,KAAKX,MAAMpC,MAClBmD,SAAUJ,KAAKT,uBAGnB,sBAAKW,UAAU,QAAf,UACE,4CACA,uBACEC,KAAK,OACLR,MAAOK,KAAKX,MAAMnC,QAClBkD,SAAUJ,KAAKJ,yBAGnB,sBAAKM,UAAU,oBAAf,UACE,0CACA,qBAAKA,UAAU,cAAf,SACGpE,EAAOmC,KAAI,SAAAd,GAAK,OACf,uBAEEF,MAAOE,EACPkD,KAAI,UAAKJ,EAAWK,cAAhB,YAAiCtD,EAAMI,IAAI,SAC/C+C,KAAK,QACLD,UAAU,QACVK,MAAO,CAACC,WAAWrD,EAAMwC,MAAO,UAAU,qBAAV,OAA+BxC,EAA/B,MAChCwC,MAAOxC,EACPsD,QAAStD,IAAU,EAAKkC,MAAMlC,MAC9BiD,SAAU,EAAKP,mBARV1C,WAcb,sBAAK+C,UAAU,OAAf,UACE,wBACEA,UAAU,iBACVQ,QAASV,KAAKF,aAFhB,SAGIG,IAEJ,wBACEC,UAAU,iBACVQ,QAASV,KAAKV,MAAMqB,SAFtB,8B,GA1EcC,aAsFTC,cACb,KACA,CAACxC,YChEwB,SAACrB,GAAD,8CAAW,WAAM8D,GAAN,eAAAlE,EAAA,sEACTuB,EAAsBE,YAAYrB,GADzB,OAC9B+D,EAD8B,OAEpCD,EAAS,CAAEX,KAAMrB,EAAc9B,MAAO+D,IAFF,2CAAX,uDDgEXzC,YC3DW,SAACtB,GAAD,8CAAW,WAAM8D,GAAN,eAAAlE,EAAA,sEACTuB,EAAsBG,YAAYtB,GADzB,OAC9BgB,EAD8B,OAEpC8C,EAAS,CAAEX,KAAMnB,EAAchC,MAAOgB,IAFF,2CAAX,wDDyDZ6C,CAGbzB,GE1Da4B,E,4MApCb3B,MAAQ,CACN4B,YAAY,G,EAGdC,kBAAoB,SAAAlE,GAClB,EAAKyC,SAAS,CAAEwB,YAAY,K,EAG9BE,kBAAoB,WAClB,EAAK1B,SAAS,CAAEwB,YAAY,K,EAG9BG,eAAiB,WACf,EAAK3B,SAAS,CAAEwB,YAAY,K,4CAG9B,WACE,OAAIjB,KAAKX,MAAM4B,WAEX,cAAC,EAAD,CACEjE,MAAO,GACP+C,SAAUC,KAAKkB,kBACfP,SAAUX,KAAKmB,oBAKjB,wBACEjB,UAAU,gBACVQ,QAASV,KAAKoB,eAFhB,SAGI,mBAAGlB,UAAU,yB,GA/BSU,aCiBlC,IAGeS,EAHG,CAChBC,oBAZF,SAA6BhE,EAASC,GACpC,IAAIgE,EAAejE,EAInB,OAHIC,IACFgE,GAAgBxD,KAAKD,MAAQP,GAbjC,SAA6BiE,GAC3B,IAAIC,EAAKC,KAAKC,MAAMH,EAAK,IAAO,GAAK,IACjCI,EAAKF,KAAKC,MAAOH,EAAK,IAAO,GAAM,IACnCK,EAAKH,KAAKC,MAAOH,EAAK,IAAQ,IAE9BM,EAAW,SAAAnE,GAAC,OAAGA,EAAE,GAAH,WAAWA,GAAIA,GAEjC,MAAM,GAAN,OAAUmE,EAASL,GAAnB,YAA0BK,EAASF,GAAnC,YAA0CE,EAASD,IAQ5CE,CAAoBR,KCKdS,E,4MAhBbC,mBAAqB,SAACC,EAAOC,EAAYC,GAApB,OACnB,wBACElC,UAAWiC,EACXzB,QAAS0B,EAFX,SAGKF,K,4CAIP,WACE,OAAIlC,KAAKV,MAAM+C,eACNrC,KAAKiC,mBAAmB,OAAQ,wBAAyBjC,KAAKV,MAAMgD,aAEpEtC,KAAKiC,mBAAmB,QAAS,yBAA0BjC,KAAKV,MAAMiD,kB,GAdlD3B,aCU3B4B,E,4MAWJjE,YAAc,WACRkE,OAAOC,QAAQ,mBACjB,EAAKpD,MAAMf,YAAY,EAAKe,MAAMtC,MAAMI,K,EAG5CoB,WAAa,WACX,EAAKc,MAAMd,WAAW,EAAKc,MAAMtC,MAAMI,K,EAGzCqB,UAAY,WACV,EAAKa,MAAMb,UAAU,EAAKa,MAAMtC,MAAMI,K,EAGxCsB,WAAa,WACP+D,OAAOC,QAAQ,kBACjB,EAAKpD,MAAMZ,WAAW,EAAKY,MAAMtC,MAAMI,K,uDAxB3C,WAAqB,IAAD,OAClB4C,KAAK2C,oBAAsBC,aAAY,kBAAM,EAAKC,gBAAe,M,kCAGnE,WACEC,cAAc9C,KAAK2C,uB,oBAsBrB,WACE,IAAM3F,EAAQgD,KAAKV,MAAMtC,MAEnB+F,EAAgB1B,EAAUC,oBAAoBtE,EAAMM,QAASN,EAAMO,cAEnEyF,EAAW,CAAC,gBAAgB,qBAAhB,OAAsChG,EAAMG,MAA5C,MAElB,OACE,sBAAK+C,UAAU,aAAaK,MAAOyC,EAAnC,UACE,sBAAK9C,UAAU,SAAf,UACE,mBAAGA,UAAU,QAAb,SACGlD,EAAMC,QAET,sBAAMiD,UAAU,UAAhB,SACGlD,EAAME,aAIX,qBAAKgD,UAAU,OAAf,SACE,6BACG6C,MAIL,sBAAK7C,UAAU,yBAAf,UACE,wBACEjD,MAAM,aACNiD,UAAU,eACVQ,QAASV,KAAKV,MAAM2D,cAEtB,wBACEhG,MAAM,eACNiD,UAAU,iBACVQ,QAASV,KAAKzB,cAEhB,wBACEtB,MAAM,cACNiD,UAAU,gBACVQ,QAASV,KAAKtB,gBAIlB,cAAC,EAAD,CACE2D,iBAAkBrF,EAAMO,aACxBgF,aAAcvC,KAAKxB,WACnB8D,YAAatC,KAAKvB,mB,GA1ERmC,aAkFLC,cACb,KACA,CAACtC,YJpDwB,SAACX,GAAD,8CAAa,WAAMkD,GAAN,SAAAlE,EAAA,sEAChCuB,EAAsBI,YAAYX,GADF,OAEtCkD,EAAS,CAAEX,KAAMpB,EAAcnB,YAFO,2CAAb,uDIoDXY,WJ/CU,SAACZ,GAAD,8CAAa,WAAMkD,GAAN,eAAAlE,EAAA,sEACjBuB,EAAsBK,WAAWZ,GADhB,OAC/BZ,EAD+B,OAErC8D,EAAS,CAAEX,KAAMlB,EAAajC,UAFO,2CAAb,uDI+CEyB,UJ1CH,SAACb,GAAD,8CAAa,WAAMkD,GAAN,eAAAlE,EAAA,sEAChBuB,EAAsBM,UAAUb,GADhB,OAC9BZ,EAD8B,OAEpC8D,EAAS,CAAEX,KAAMjB,EAAYlC,UAFO,2CAAb,uDI0Cc0B,WJrCb,SAACd,GAAD,8CAAa,WAAMkD,GAAN,eAAAlE,EAAA,sEACjBuB,EAAsBO,WAAWd,GADhB,OAC/BZ,EAD+B,OAErC8D,EAAS,CAAEX,KAAMhB,EAAanC,UAFO,2CAAb,wDImCX6D,CAGb2B,GCxDaU,E,4MApCb7D,MAAQ,CACN4B,YAAY,G,EAGdkC,kBAAoB,SAAAnG,GAClB,EAAKyC,SAAS,CAAEwB,YAAY,K,EAG9BE,kBAAoB,WAClB,EAAK1B,SAAS,CAAEwB,YAAY,K,EAG9BmC,gBAAkB,WAChB,EAAK3D,SAAS,CAAEwB,YAAY,K,4CAG9B,WACE,OAAIjB,KAAKX,MAAM4B,WAEX,cAAC,EAAD,CACEjE,MAAOgD,KAAKV,MAAMtC,MAClB+C,SAAUC,KAAKmD,kBACfxC,SAAUX,KAAKmB,oBAKjB,cAAC,EAAD,CACEnE,MAAOgD,KAAKV,MAAMtC,MAClBiG,YAAajD,KAAKoD,sB,GA9BAxC,aCkBbyC,E,4JAhBb,WACE,IAAM5G,EAASuD,KAAKV,MAAM7C,OAC1B,OACE,sBAAKyD,UAAU,sBAAf,UACE,cAAC,EAAD,IACCzD,EAAOwB,KAAI,SAAAjB,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMI,c,GARSwD,aCC1B0C,EAAU,CACdC,IAAU,kBAAM,GAChBC,QAAU,SAACxG,GAAD,QAAaA,EAAMO,cAC7BkG,QAAU,SAACzG,GAAD,OAAYA,EAAMO,eAKxBmG,E,4MACJrE,MAAQ,CACNsE,aAAeL,EAAQC,K,EAQzBK,aAAe,SAAC/F,GACd,EAAK4B,SAAS,CAACkE,aAAc9F,K,EAG/BgG,aAAe,SAAC3B,EAAO4B,EAAOjG,GAC5B,OACE,sBACEqC,UAAS,iBAAarC,IAAS,EAAKwB,MAAMsE,aAAc,SAAS,IACjEjD,QAAS,kBAAI,EAAKkD,aAAa/F,IAFjC,UAGI,sBAAMqC,UAAU,QAAhB,SAAyBgC,IACzB,sBAAMhC,UAAU,QAAhB,SAAyB4D,Q,uDAfjC,WACE9D,KAAKV,MAAMyE,WACX/D,KAAKV,MAAMlB,gB,oBAkBb,WAAU,IAAD,OACD3B,EAASuD,KAAKV,MAAM7C,OAEpBuH,EAAevH,EAAOwH,OACtBC,EAAezH,EAAOoB,OAAOyF,EAAQE,SAASS,OAC9CE,EAAe1H,EAAOoB,OAAOyF,EAAQG,SAASQ,OAE9CG,EAAQpE,KAAKV,MAAM8E,MACnBC,EAAuB,UAARD,EAAgB,OAAO,QAK5C,OAHAE,SAASC,KAAKC,UAAU7E,MAAM,GAC9B2E,SAASC,KAAKC,UAAUC,IAAI,SAASL,GAGnC,qBAAKlE,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,aAAf,UACE,gDAEA,sBAAKA,UAAU,UAAf,UACGF,KAAK6D,aAAa,MAAOG,EAAUV,EAAQC,KAC3CvD,KAAK6D,aAAa,UAAWK,EAAcZ,EAAQE,SACnDxD,KAAK6D,aAAa,UAAWM,EAAcb,EAAQG,YAGtD,wBACExG,MAAK,oBAAeoH,EAAf,UACLnE,UAAS,gCAA2BkE,GACpC1D,QAAS,kBAAI,EAAKpB,MAAMoF,YAAYL,SAIxC,cAAC,EAAD,CAAmB5H,OAAQA,EAAOoB,OAAOmC,KAAKX,MAAMsE,yB,GAzD5C/C,aAqEHC,eAHS,SAAC,GACvB,MAAO,CAACpE,OADqC,EAApBA,OACT2H,MAD6B,EAAZA,SAKjC,CAAChG,YPxDwB,yDAAM,WAAM0C,GAAN,eAAAlE,EAAA,sEACVuB,EAAsBC,cADZ,OACzB3B,EADyB,OAE/BqE,EAAS,CAAEX,KAAMtB,EAAcpC,WAFA,2CAAN,uDOwDXsH,SPjEQ,WACtB,IAAMK,EAAQ3B,OAAOnG,aAAaC,QAAQ,UAAY,QACtD,MAAO,CAAE4D,KAAMvB,EAAWwF,UO+DFM,YPtEC,SAAAN,GAEzB,OADA3B,OAAOnG,aAAaI,QAAQ,QAAS0H,GAC9B,CAAEjE,KAAMxB,EAAcyF,WOkEhBvD,CAGb6C,G,kBChDF,SAASiB,KAA8C,IAA3BC,EAA0B,uDAAX,GAAI5H,EAAO,uCAC9CP,EAASmI,EAAa3G,KAAI,SAAAN,GAC9B,OAAIA,EAAEP,KAAOJ,EAAMI,GACVJ,EAEAW,KAGX,OAAOlB,EC3CMoI,oBAAgB,CAC7BT,MCHa,WAAsD,IAAhCU,EAA+B,uDAAjB,QAASC,EAAQ,uCAClE,OAAQA,EAAO5E,MACb,KAAKxB,EACL,KAAKC,EACH,OAAOmG,EAAOX,MAEhB,QACE,OAAOU,IDHXrI,ODCa,WAAmD,IAA5BmI,EAA2B,uDAAZ,GAAIG,EAAQ,uCAC/D,OAAQA,EAAO5E,MAEb,KAAKtB,EACH,IAAMpC,EAASsI,EAAOtI,OAEtB,OAAOA,EAGT,KAAKqC,EACH,MAAM,CAAEiG,EAAO/H,OAAf,mBAAyB4H,IAG3B,KAAK7F,EACH,OAAO,YAAI6F,GAAc/G,QAAO,SAAAb,GAAK,OAAIA,EAAMI,KAAO2H,EAAOnH,WAI/D,KAAKoB,EACL,KAAKC,EACL,KAAKC,EACL,KAAKC,EACH,OAAOwF,GAAmBC,EAAcG,EAAO/H,OAIjD,QAAS,OAAO4H,MG7BdI,GAAoB,CAACC,aAAgBC,MAASzC,OAAO0C,6BAA6B1C,OAAO0C,+BAA+B,SAAAC,GAAC,OAAEA,IAGlHC,GAFDC,aAAYC,QAAaC,EAAWC,KAAO,WAAP,EAAWT,KCI7DU,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFf,SAASsB,eAAe,W","file":"static/js/main.a115e942.chunk.js","sourcesContent":["const COLORS = [\r\n  \"default\", \r\n  \"red\",    \r\n  \"green\",  \r\n  \"orange\", \r\n  \"blue\",   \r\n  \"magenta\"\r\n]\r\n\r\nexport default COLORS","import {v4 as uuidv4} from 'uuid'\r\n\r\nconst DEFAULT_TIMER_TITLE   = 'Title'\r\nconst DEFAULT_TIMER_PROJECT = 'Project'\r\nconst DEFAULT_TIMER_COLOR   = 'default'\r\n\r\nconst LOCAL_STORAGE_KEY___TIMERS = \"timers\"\r\n\r\n\r\nfunction loadTimers(){\r\n  return (JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY___TIMERS)) ||[])\r\n}\r\nfunction saveTimers(timers){\r\n  localStorage.setItem(LOCAL_STORAGE_KEY___TIMERS, JSON.stringify(timers))\r\n}\r\n\r\n\r\n\r\nasync function fetchTimers() {\r\n  const timers = loadTimers()\r\n\r\n  await new Promise(resolve => setTimeout( resolve, 0))\r\n  return timers\r\n}\r\n\r\n\r\n\r\nasync function createTimer(timer) {\r\n  timer = {\r\n    title: timer.title || DEFAULT_TIMER_TITLE,\r\n    project: timer.project || DEFAULT_TIMER_PROJECT,\r\n    color: timer.color || DEFAULT_TIMER_COLOR,\r\n    id: uuidv4(),\r\n    elapsed: 0,\r\n    runningSince: null\r\n  }\r\n  const timers = [timer, ...loadTimers()]\r\n  saveTimers(timers)\r\n  \r\n  await new Promise(resolve => setTimeout( resolve, 0))\r\n  return timer\r\n}\r\n\r\n\r\n\r\nasync function updateTimer(newTimer) {\r\n  newTimer = {\r\n    ...newTimer,\r\n    title: newTimer.title || DEFAULT_TIMER_TITLE,\r\n    project: newTimer.project || DEFAULT_TIMER_PROJECT\r\n  }\r\n  const timers = loadTimers()\r\n  const timerIndex = timers.findIndex(t => t.id === newTimer.id)\r\n  timers[timerIndex] = newTimer\r\n\r\n  saveTimers(timers)\r\n\r\n  await new Promise(resolve => setTimeout( resolve, 0))\r\n  return newTimer\r\n}\r\n\r\n\r\n\r\nasync function deleteTimer(timerID) {\r\n  const timers = loadTimers().filter(timer=>timer.id!==timerID)\r\n  \r\n  saveTimers(timers)\r\n\r\n  await new Promise(resolve => setTimeout( resolve, 0))\r\n  return timerID\r\n}\r\n\r\n\r\n\r\nasync function startTimer(timerID) {\r\n  const now = Date.now()\r\n  let updatedTimer = {}\r\n  const timers = loadTimers().map(timer => {\r\n    if (timer.id === timerID) {\r\n      updatedTimer = {...timer, runningSince: now }\r\n      return updatedTimer\r\n    }\r\n    else \r\n      return timer\r\n  })\r\n\r\n  saveTimers(timers)\r\n\r\n  await new Promise(resolve => setTimeout( resolve, 0))\r\n  return updatedTimer\r\n}\r\n\r\n\r\n\r\nasync function stopTimer(timerID) {\r\n  const now = Date.now()\r\n  let updatedTimer = {}\r\n  const timers = loadTimers().map(timer => {\r\n    if (timer.id === timerID) {\r\n        let lastElapsed = now - timer.runningSince\r\n        updatedTimer = {...timer, elapsed: timer.elapsed + lastElapsed, runningSince: null }\r\n        return updatedTimer\r\n    } else \r\n      return timer\r\n  })\r\n\r\n  saveTimers(timers)\r\n\r\n  await new Promise(resolve => setTimeout( resolve, 0))\r\n  return updatedTimer\r\n}\r\n\r\n\r\n\r\nasync function resetTimer(timerID) {\r\n  let updatedTimer = {}\r\n  const timers = loadTimers().map(timer => {\r\n    if (timer.id === timerID) {\r\n        updatedTimer = {...timer, elapsed: 0, runningSince: null }\r\n        return updatedTimer\r\n    } else \r\n      return timer\r\n  })\r\n\r\n  saveTimers(timers)\r\n\r\n  await new Promise(resolve => setTimeout( resolve, 0))\r\n  return updatedTimer\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst Server_Data_Simulator = {\r\n  fetchTimers,\r\n  createTimer,\r\n  updateTimer,\r\n  deleteTimer,\r\n  startTimer,\r\n  stopTimer,\r\n  resetTimer\r\n}\r\nexport default Server_Data_Simulator","export const CHANGE_THEME = \"change-theme-action\"\r\nexport const GET_THEME    = \"get-theme-action\"\r\n\r\nexport const FETCH_TIMERS = \"fetch-timers-action\"\r\nexport const CREATE_TIMER = \"create-timer-action\"\r\nexport const DELETE_TIMER = \"delete-timer-action\"\r\nexport const UPDATE_TIMER = \"update-timer-action\"\r\nexport const START_TIMER  = \"start-timer-action\"\r\nexport const STOP_TIMER   = \"stop-timer-action\"\r\nexport const RESET_TIMER  = \"reset-timer-action\"","import COLORS from '../constants/colors'\r\nimport {React, Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  createTimer,\r\n  updateTimer\r\n} from '../stores/actions'\r\n\r\n\r\n\r\n\r\nclass TimerForm extends Component {\r\n  state = {\r\n    title: this.props.timer.title || '',\r\n    project: this.props.timer.project || '',\r\n    color : this.props.timer.color || COLORS[0]\r\n  }\r\n\r\n  handleTitleChange   = e => this.setState({ title:   e.target.value })\r\n  handleProjectChange = e => this.setState({ project: e.target.value })\r\n  handleColorChange   = e => this.setState({ color:   e.target.value }) \r\n\r\n  handleSubmit = () => {\r\n    const timer = {\r\n      ...this.props.timer,\r\n      title   : this.state.title,\r\n      project : this.state.project,\r\n      color   : this.state.color\r\n    }\r\n\r\n    if (!!timer.id)\r\n      this.props.updateTimer(timer)\r\n    else\r\n      this.props.createTimer(timer)\r\n\r\n    this.props.onSubmit()\r\n  }\r\n\r\n  render() {\r\n    const timer = this.props.timer\r\n    const submitText = timer.id ? 'Update' : 'Create'\r\n\r\n    return (\r\n      <div className='timer-form card'>\r\n        <div className='field'>\r\n          <label>Title</label>\r\n          <input \r\n            type='text' \r\n            value={this.state.title} \r\n            onChange={this.handleTitleChange}\r\n          />\r\n        </div>\r\n        <div className='field'>\r\n          <label>Project</label>\r\n          <input \r\n            type='text' \r\n            value={this.state.project}\r\n            onChange={this.handleProjectChange}\r\n          />\r\n        </div>\r\n        <div className='field color-field'>\r\n          <label>Color</label>\r\n          <div className=\"colors-list\">\r\n            {COLORS.map(color=>(\r\n              <input \r\n                key={color} \r\n                title={color}\r\n                name={`${submitText.toLowerCase()}-${timer.id||'empty'}`}\r\n                type=\"radio\" \r\n                className=\"color\" \r\n                style={{background:color.value, '--color':`var(--color-timer-${color})`}} \r\n                value={color} \r\n                checked={color === this.state.color}\r\n                onChange={this.handleColorChange}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className='btns'>\r\n          <button \r\n            className='btn submit-btn' \r\n            onClick={this.handleSubmit} >\r\n             {submitText}\r\n          </button>\r\n          <button \r\n            className='btn cancel-btn' \r\n            onClick={this.props.onCancel} >\r\n              Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  null,\r\n  {createTimer, updateTimer}\r\n)(TimerForm)\r\n"," //simulate fetch data from server :\r\nimport Server_Data_Simulator from '../../server-data-simulator'\r\n\r\nimport {\r\n  CHANGE_THEME,  GET_THEME,\r\n  FETCH_TIMERS,  CREATE_TIMER,\r\n  DELETE_TIMER,  UPDATE_TIMER,\r\n  START_TIMER,   STOP_TIMER,\r\n  RESET_TIMER\r\n} from './types'\r\n\r\n\r\n\r\n\r\n// Theme action creators :\r\n\r\nexport const changeTheme = theme => {\r\n  window.localStorage.setItem(\"theme\", theme)\r\n  return { type: CHANGE_THEME, theme }\r\n}\r\n\r\nexport const getTheme = () => {\r\n  const theme = window.localStorage.getItem(\"theme\") || \"light\"\r\n  return { type: GET_THEME, theme }\r\n}\r\n\r\n\r\n\r\n// Timers action creators :\r\n\r\nexport const fetchTimers = () => async dispatch => {\r\n  const timers = await Server_Data_Simulator.fetchTimers()\r\n  dispatch({ type: FETCH_TIMERS, timers })\r\n}\r\n\r\nexport const createTimer = (timer) => async dispatch => {\r\n  const createdTimer = await Server_Data_Simulator.createTimer(timer)\r\n  dispatch({ type: CREATE_TIMER, timer: createdTimer })\r\n}\r\n\r\nexport const updateTimer = (timer) => async dispatch => {\r\n  const updatedTimer = await Server_Data_Simulator.updateTimer(timer)\r\n  dispatch({ type: UPDATE_TIMER, timer: updatedTimer })\r\n}\r\n\r\nexport const deleteTimer = (timerID) => async dispatch => {\r\n  await Server_Data_Simulator.deleteTimer(timerID)\r\n  dispatch({ type: DELETE_TIMER, timerID })\r\n}\r\n\r\nexport const startTimer = (timerID) => async dispatch => {\r\n  const timer = await Server_Data_Simulator.startTimer(timerID)\r\n  dispatch({ type: START_TIMER, timer })\r\n}\r\n\r\nexport const stopTimer = (timerID) => async dispatch => {\r\n  const timer = await Server_Data_Simulator.stopTimer(timerID)\r\n  dispatch({ type: STOP_TIMER, timer })\r\n}\r\n\r\nexport const resetTimer = (timerID) => async dispatch => {\r\n  const timer = await Server_Data_Simulator.resetTimer(timerID)\r\n  dispatch({ type: RESET_TIMER, timer })\r\n}\r\n","import {React, Component} from 'react'\r\nimport TimerForm from './TimerForm'\r\n\r\n\r\n\r\nclass ToggleableTimerForm extends Component {\r\n  state = {\r\n    isFormOpen: false\r\n  }\r\n\r\n  handleCreateClick = timer => {\r\n    this.setState({ isFormOpen: false })\r\n  }\r\n\r\n  handleCancelClick = () => {\r\n    this.setState({ isFormOpen: false })\r\n  }\r\n\r\n  handleAddClick = () => {\r\n    this.setState({ isFormOpen: true })\r\n  }\r\n  \r\n  render() {\r\n    if (this.state.isFormOpen)\r\n      return (\r\n        <TimerForm \r\n          timer={{}} \r\n          onSubmit={this.handleCreateClick}\r\n          onCancel={this.handleCancelClick}\r\n        />\r\n      )\r\n    //else :\r\n      return (\r\n        <button \r\n          className='add-timer-btn' \r\n          onClick={this.handleAddClick} >\r\n            <i className=\"icon icon-plus\"></i>\r\n        </button>\r\n      )\r\n  }\r\n}\r\n  \r\nexport default ToggleableTimerForm","\nfunction millisecondsToHuman(MS) { \n  let HH = Math.floor(MS / 1000 / 60 / 60)\n  let MM = Math.floor((MS / 1000 / 60) % 60)\n  let SS = Math.floor((MS / 1000) % 60)\n\n  let format00 = t=>(t<10)?`0${t}`:t \n\n  return `${format00(HH)}:${format00(MM)}:${format00(SS)}`\n}\n\nfunction renderElapsedString(elapsed, runningSince) {\n  let totalElapsed = elapsed\n  if (runningSince)\n    totalElapsed += Date.now() - runningSince\n\n  return millisecondsToHuman(totalElapsed)\n}\n\n\n\n\nconst timeUtils = {\n  renderElapsedString\n}\nexport default timeUtils","import {React, Component} from 'react'\r\n\r\n\r\nclass TimerActionButtons extends Component {\r\n\r\n  renderActionButton = (label, cssClasses, onClickHandler)=>(\r\n    <button \r\n      className={cssClasses}  \r\n      onClick={onClickHandler}>\r\n        {label}\r\n    </button>\r\n  )\r\n\r\n  render() {\r\n    if (this.props.timerIsRunning)\r\n      return this.renderActionButton(\"Stop\", \"timer-action-btn stop\", this.props.onStopClick)\r\n    else\r\n      return this.renderActionButton(\"Start\", \"timer-action-btn start\", this.props.onStartClick)\r\n  }\r\n}\r\n\r\nexport default TimerActionButtons\r\n","import timeUtils from '../utilities/time'\r\nimport {React, Component} from 'react'\r\nimport TimerActionButtons from './TimerActionButtons'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  deleteTimer,\r\n  startTimer,\r\n  stopTimer,\r\n  resetTimer\r\n} from '../stores/actions'\r\n\r\n\r\n\r\nclass Timer extends Component {\r\n\r\n  componentDidMount() {\r\n    this.forceUpdateInterval = setInterval(() => this.forceUpdate(), 50)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.forceUpdateInterval)\r\n  }\r\n\r\n\r\n  deleteTimer = () => {\r\n    if (window.confirm(\"Delete timer ?\"))\r\n      this.props.deleteTimer(this.props.timer.id)\r\n  }\r\n    \r\n  startTimer = () => {\r\n    this.props.startTimer(this.props.timer.id)\r\n  }\r\n\r\n  stopTimer = () => {\r\n    this.props.stopTimer(this.props.timer.id)\r\n  }\r\n\r\n  resetTimer = () => {\r\n    if (window.confirm(\"Reset timer ?\"))\r\n      this.props.resetTimer(this.props.timer.id)\r\n  }\r\n\r\n  render() {\r\n    const timer = this.props.timer\r\n\r\n    const elapsedString = timeUtils.renderElapsedString(timer.elapsed, timer.runningSince)\r\n\r\n    const cssStyle = {\"--color-timer\": `var(--color-timer-${timer.color})` }\r\n\r\n    return (\r\n      <div className='timer card' style={cssStyle}>\r\n        <div className='header'>\r\n          <b className=\"title\">\r\n            {timer.title}\r\n          </b>\r\n          <span className=\"project\">\r\n            {timer.project}\r\n          </span>\r\n        </div>\r\n\r\n        <div className='time'>\r\n          <h2>\r\n            {elapsedString}\r\n          </h2>\r\n        </div>\r\n\r\n        <div className='edit-delete-reset-btns'>\r\n          <button \r\n            title=\"Edit timer\" \r\n            className='btn edit-btn' \r\n            onClick={this.props.onEditClick}>\r\n          </button>\r\n          <button \r\n            title=\"Delete timer\" \r\n            className='btn delete-btn' \r\n            onClick={this.deleteTimer}>\r\n          </button>\r\n          <button \r\n            title=\"Reset timer\" \r\n            className='btn reset-btn' \r\n            onClick={this.resetTimer}>\r\n          </button>\r\n        </div>\r\n\r\n        <TimerActionButtons\r\n          timerIsRunning={!!timer.runningSince}\r\n          onStartClick={this.startTimer}\r\n          onStopClick={this.stopTimer}\r\n        />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  {deleteTimer, startTimer, stopTimer, resetTimer}\r\n)(Timer)","import {React, Component} from 'react'\r\nimport TimerForm from './TimerForm'\r\nimport Timer from './Timer'\r\n\r\n\r\nclass EditableTimer extends Component {\r\n  state = {\r\n    isFormOpen: false\r\n  }\r\n\r\n  handleUpdateClick = timer => {\r\n    this.setState({ isFormOpen: false })\r\n  }\r\n\r\n  handleCancelClick = () => {\r\n    this.setState({ isFormOpen: false })\r\n  }\r\n\r\n  handleEditClick = () => {\r\n    this.setState({ isFormOpen: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isFormOpen)\r\n      return (\r\n        <TimerForm \r\n          timer={this.props.timer} \r\n          onSubmit={this.handleUpdateClick}\r\n          onCancel={this.handleCancelClick}\r\n        />\r\n      )\r\n    //else :\r\n      return (\r\n        <Timer\r\n          timer={this.props.timer}\r\n          onEditClick={this.handleEditClick}\r\n        />\r\n      )\r\n  }\r\n}\r\n\r\n\r\nexport default EditableTimer","import {React, Component} from 'react'\r\nimport ToggleableTimerForm from './ToggleableTimerForm'\r\nimport EditableTimer from './EditableTimer'\r\n\r\n\r\n\r\nclass EditableTimerList extends Component {\r\n  render() {\r\n    const timers = this.props.timers\r\n    return (\r\n      <div className='editable-timer-list'>\r\n        <ToggleableTimerForm />\r\n        {timers.map(timer => (\r\n          <EditableTimer\r\n            key={timer.id}\r\n            timer={timer}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditableTimerList\r\n","import './App.scss'\nimport {React, Component} from 'react'\nimport EditableTimerList from './EditableTimerList'\nimport { connect } from 'react-redux'\nimport { fetchTimers, getTheme, changeTheme } from '../stores/actions'\n\n\nconst FILTERS = {\n  all     : () => true ,\n  running : (timer) => !!timer.runningSince ,\n  stopped : (timer) => !timer.runningSince\n}\n\n\n\nclass App extends Component {\n  state = {\n    timersFilter : FILTERS.all\n  }\n\n  componentDidMount(){\n    this.props.getTheme()\n    this.props.fetchTimers()\n  }\n\n  changeFilter = (filter)=>{\n    this.setState({timersFilter: filter})\n  }\n\n  renderFilter = (label, count, filter) => {\n    return (\n      <div \n        className={`filter ${(filter===this.state.timersFilter)?'active':''}`} \n        onClick={()=>this.changeFilter(filter)}>\n          <span className=\"label\">{label}</span>\n          <span className=\"count\">{count}</span>\n      </div>\n    )\n  }\n\n  render() {\n    const timers = this.props.timers\n\n    const allCount     = timers.length\n    const runningCount = timers.filter(FILTERS.running).length\n    const stoppedCount = timers.filter(FILTERS.stopped).length\n\n    const theme = this.props.theme\n    const inverseTheme = theme==='light'?'dark':'light'\n\n    document.body.classList.value=\"\"\n    document.body.classList.add(\"theme-\"+theme)\n\n    return (\n      <div className='app'>\n        <div className='container'>\n          <div className=\"app-header\">\n            <h3>Timers tracker</h3>\n\n            <div className=\"filters\">\n              {this.renderFilter(\"All\", allCount, FILTERS.all)}\n              {this.renderFilter(\"Running\", runningCount, FILTERS.running)}\n              {this.renderFilter(\"Stopped\", stoppedCount, FILTERS.stopped)}\n            </div>\n\n            <button \n              title={`Switch to ${inverseTheme} theme`}\n              className={`icon icon-theme theme-${theme}`}\n              onClick={()=>this.props.changeTheme(inverseTheme)} >\n            </button>\n          </div>\n\n          <EditableTimerList timers={timers.filter(this.state.timersFilter)} />\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\nconst mapStateToProps = ({ timers, theme }) => {\n  return {timers, theme}\n}\nexport default connect(\n  mapStateToProps,\n  {fetchTimers, getTheme, changeTheme}\n)(App)\n","import {\r\n  FETCH_TIMERS,  CREATE_TIMER,\r\n  DELETE_TIMER,  UPDATE_TIMER,\r\n  START_TIMER,   STOP_TIMER,\r\n  RESET_TIMER\r\n} from '../actions/types'\r\n\r\nexport default function timersReducer(state_timers = [], action) {\r\n  switch (action.type) {\r\n    \r\n    case FETCH_TIMERS: {\r\n      const timers = action.timers\r\n      \r\n      return timers\r\n    }\r\n    \r\n    case CREATE_TIMER: {\r\n      return [action.timer, ...state_timers]\r\n    }\r\n\r\n    case DELETE_TIMER: {\r\n      return [...state_timers].filter(timer => timer.id !== action.timerID)\r\n    }\r\n\r\n\r\n    case UPDATE_TIMER:\r\n    case START_TIMER:\r\n    case STOP_TIMER:\r\n    case RESET_TIMER:\r\n      return timerUpdateReducer(state_timers, action.timer)\r\n  \r\n\r\n\r\n    default: return state_timers\r\n  \r\n  }\r\n}\r\n\r\n\r\nfunction timerUpdateReducer(state_timers = [], timer) {\r\n  const timers = state_timers.map(t => {\r\n    if (t.id === timer.id)\r\n      return timer\r\n    else\r\n      return t\r\n  })\r\n  \r\n  return timers\r\n}","import { combineReducers } from 'redux'\r\nimport themeReducer from './theme-reducer'\r\nimport timersReducer from './timers-reducer'\r\n\r\nexport default combineReducers({\r\n  theme  : themeReducer,\r\n  timers : timersReducer\r\n})\r\n","import { CHANGE_THEME, GET_THEME } from '../actions/types'\r\n\r\nexport default function themeReducer(state_theme = \"light\", action) {\r\n  switch (action.type){\r\n    case CHANGE_THEME :\r\n    case GET_THEME :\r\n      return action.theme\r\n\r\n    default : \r\n      return state_theme\r\n  }\r\n\r\n}","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst composedEnhancers = [applyMiddleware(thunk), (window.__REDUX_DEVTOOLS_EXTENSION__?window.__REDUX_DEVTOOLS_EXTENSION__():f=>f)]\r\nconst store = createStore(rootReducer, undefined, compose(...composedEnhancers) )\r\n\r\nexport default store","import './index.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport { Provider } from 'react-redux'\nimport store from './stores/store'\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}